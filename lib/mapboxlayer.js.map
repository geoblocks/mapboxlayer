{"version":3,"file":"mapboxlayer.js","sources":["../../src/MapBoxLayer.js"],"sourcesContent":["import Layer from 'ol/layer/Layer'\nimport {toDegrees} from 'ol/math';\nimport {toLonLat} from 'ol/proj.js';\n\nimport mapboxgl from 'mapbox-gl';\n\n/**\n * @typedef {Object} Options\n * @property {string} [accessToken]\n * @property {string} style\n * @property {string|HTMLElement} container\n */\n\n\nexport default class MapBox extends Layer {\n\n  /**\n   * @param {Options} options\n   */\n  constructor(options) {\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.accessToken;\n    delete baseOptions.style;\n    delete baseOptions.container;\n    delete baseOptions.xyz;\n\n    super(baseOptions);\n\n    this.xyz_ = options.xyz;\n\n    if (options.accessToken) {\n      mapboxgl.accessToken = options.accessToken;\n    }\n\n    this.map_ = new mapboxgl.Map({\n      container: options.container,\n      style: options.style,\n      attributionControl: false,\n      interactive: false\n    });\n  }\n\n\n  getMapBoxMap() {\n    return this.map_;\n  }\n\n\n  /**\n   * @param {import('ol/PluggableMap').FrameState} frameState\n   */\n  render(frameState) {\n    const canvas = this.map_.getCanvas();\n    const viewState = frameState.viewState;\n\n    canvas.style.position = 'absolute';\n\n    const visible = this.getVisible();\n    canvas.style.display = visible ? 'block' : 'none';\n\n    const opacity = this.getOpacity().toString();\n    if (opacity !== canvas.style.opacity) {\n      canvas.style.opacity = opacity;\n    }\n\n    // adjust view parameters in mapbox\n    const rotation = viewState.rotation;\n    if (rotation) {\n      this.map_.rotateTo(toDegrees(-rotation), {\n        animate: false\n      });\n    }\n    this.map_.jumpTo({\n      center: toLonLat(viewState.center),\n      zoom: viewState.zoom - 1,\n      animate: false\n    });\n\n    // cancel the scheduled update & trigger synchronous redraw\n    // see https://github.com/mapbox/mapbox-gl-js/issues/7893#issue-408992184\n    // NOTE: THIS MIGHT BREAK WHEN UPDATING MAPBOX\n    if (this.map_._frame) {\n      this.map_._frame.cancel();\n      this.map_._frame = null;\n    }\n    this.map_._render();\n\n    return canvas;\n  }\n\n  /**\n   * @param {string} name\n   * @param {boolean} visible\n   */\n  setLayerVisibility(name, visible) {\n    this.map_.setLayoutProperty(name, 'visibility', visible ? 'visible' : 'none');\n  }\n\n  /**\n   * @return {mapboxgl.Style}\n   */\n  getStyle() {\n    return this.map_.getStyle();\n  }\n\n  getXYZ() {\n    return this.xyz_;\n  }\n}\n"],"names":["Layer","constructor","options","baseOptions","Object","assign","accessToken","style","container","xyz","super","this","xyz_","mapboxgl","map_","Map","attributionControl","interactive","getMapBoxMap","render","frameState","canvas","getCanvas","viewState","position","visible","getVisible","display","opacity","getOpacity","toString","rotation","rotateTo","toDegrees","animate","jumpTo","center","toLonLat","zoom","_frame","cancel","_render","setLayerVisibility","name","setLayoutProperty","getStyle","getXYZ"],"mappings":"8JAcoCA,EAKlCC,YAAYC,GAEV,MAAMC,EAAcC,OAAOC,OAAO,GAAIH,UAE/BC,EAAYG,mBACZH,EAAYI,aACZJ,EAAYK,iBACZL,EAAYM,IAEnBC,MAAMP,GAENQ,KAAKC,KAAOV,EAAQO,IAEhBP,EAAQI,cACVO,EAASP,YAAcJ,EAAQI,aAGjCK,KAAKG,KAAO,IAAID,EAASE,IAAI,CAC3BP,UAAWN,EAAQM,UACnBD,MAAOL,EAAQK,MACfS,oBAAoB,EACpBC,aAAa,IAKjBC,eACE,YAAYJ,KAOdK,OAAOC,GACL,MAAMC,EAASV,KAAKG,KAAKQ,YACnBC,EAAYH,EAAWG,UAE7BF,EAAOd,MAAMiB,SAAW,WAExB,MAAMC,EAAUd,KAAKe,aACrBL,EAAOd,MAAMoB,QAAUF,EAAU,QAAU,OAE3C,MAAMG,EAAUjB,KAAKkB,aAAaC,WAC9BF,IAAYP,EAAOd,MAAMqB,UAC3BP,EAAOd,MAAMqB,QAAUA,GAIzB,MAAMG,EAAWR,EAAUQ,SAqB3B,OApBIA,GACFpB,KAAKG,KAAKkB,SAASC,GAAWF,GAAW,CACvCG,SAAS,IAGbvB,KAAKG,KAAKqB,OAAO,CACfC,OAAQC,EAASd,EAAUa,QAC3BE,KAAMf,EAAUe,KAAO,EACvBJ,SAAS,IAMPvB,KAAKG,KAAKyB,SACZ5B,KAAKG,KAAKyB,OAAOC,SACjB7B,KAAKG,KAAKyB,OAAS,MAErB5B,KAAKG,KAAK2B,UAEHpB,EAOTqB,mBAAmBC,EAAMlB,GACvBd,KAAKG,KAAK8B,kBAAkBD,EAAM,aAAclB,EAAU,UAAY,QAMxEoB,WACE,YAAY/B,KAAK+B,WAGnBC,SACE,YAAYlC"}